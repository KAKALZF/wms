<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com._520it.wms1.mapper.EmployeeMapper">
	<resultMap type="Employee" id="base_map">
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="password" column="password" />
		<result property="email" column="email" />
		<result property="age" column="age" />
		<result property="admin" column="admin" />
		<association property="dept" javaType="Department">
			<result property="id" column="did" />
			<result property="name" column="dname" />
		</association>
		<collection property="roles" ofType="Role"
			select="com._520it.wms1.mapper.RoleMapper.selectRolesByEmployeeId"
			column="id" fetchType="eager">
		</collection>
	</resultMap>
	<insert id="save" useGeneratedKeys="true" keyColumn="id"
		keyProperty="id">
		insert into
		employee(name,password,email,age,admin,dept_id)
		values(#{name},#{password},#{email},#{age},#{admin},#{dept.id});
	</insert>
	<delete id="delete">
		delete from employee where id=#{id};
	</delete>
	<update id="update">
		update employee
		<set>
			<if test="name!=null">
				name=#{name},
			</if>
			<if test="password!=null">
				password=#{password},
			</if>
			<if test="email!=null">
				email=#{email},
			</if>
			<if test="age!=null">
				age=#{age},
			</if>
			<if test="admin!=null">
				admin=#{admin},
			</if>
			<if test="dept!=null">
				dept_id=#{dept.id},
			</if>

		</set>
		where id
		=#{id}
	</update>
	<select id="get" resultMap="base_map">
		SELECT r.name rname, e.*, r.id
		rid,d.name dname,d.id did
		FROM
		employee e
		left
		JOIN
		emp_role er
		ON
		e.id=er.emp_id left JOIN role r
		on
		er.role_id=r.id
		LEFT
		JOIN department d
		ON e.dept_id=d.id
		where e.id =
		#{id}
	</select>
	<select id="list" resultMap="base_map">
		select e.*,d.id did ,d.name dname
		from employee e
		left join
		department d
		on e.dept_id=d.id
		limit
		#{beginIndex},#{pageSize}
	</select>


	<sql id="conditons_sql">
		<where>
			<if test="keywords!=null and keywords!=''">
				<!-- ( e.name like concat('%'+#{keywords}+'%') or e.email like concat('%'+#{keywords}+'%') 
					) -->
				(
				e.name like concat('%',#{keywords},'%')
				or
				e.email like
				concat('%',#{keywords},'%')
				)
			</if>
			<if test="deptId!=null and deptId!=-1"> and e.dept_Id=#{deptId} </if>
		</where>
	</sql>


	<select id="getListData" resultMap="base_map">
		select e.*,d.id did ,d.name
		dname
		from employee e
		left join
		department d
		on e.dept_id=d.id
		<include refid="conditons_sql" />
		limit
		#{beginIndex},#{pageSize}
	</select>

	<select id="getTotalCount" resultType="Long">
		select count(e.id)
		from employee e
		left join
		department d
		on
		e.dept_id=d.id
		<include refid="conditons_sql" />
	</select>

	<insert id="saveReload">
		insert into emp_role(emp_id,role_id)
		value(#{empId},#{roleId});
	</insert>

	<delete id="deleteRelation">
		delete from emp_role where emp_id=#{id}
	</delete>

	<select id="checkLogin" resultMap="base_map">
		<!-- select * from employee where name=#{username} and password=#{password}; -->
		SELECT e.*,d.name dname,d.id did
		FROM
		employee e
		LEFT
		JOIN department d ON
		e.dept_id=d.id
		where
		e.name=#{username} and e.password=#{password};
	</select>

	<update id="deleteEmp_DeptRelation">
		update employee set dept_id = null where dept_id
		=#{id};
	</update>
</mapper>
